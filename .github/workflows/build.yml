name: build

on:
  schedule:
    - cron: 0 22 * * 4
  workflow_dispatch:
  pull_request:
    branches: main
  push:
    branches: main
    paths-ignore: 
      - "*.md"
      - "*.txt"
      - "*.png"
      - ".github/*"
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - 
        name: checkout code
        uses: actions/checkout@v2
      -
        name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE="${{ secrets.DOCKER_USERNAME }}/sftp"
          GHCR_IMAGE="ghcr.io/${{ github.repository_owner }}/sftp"
          PLATFORMS=linux/amd64,linux/arm/v7,linux/arm64
          VERSION=latest

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=weekly
          fi

          DOCKER_TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          DOCKER_TAGS="$DOCKER_TAGS \
          ${DOCKER_IMAGE}:main"
          fi

          GHCR_TAGS="${GHCR_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          GHCR_TAGS="$GHCR_TAGS \
          ${GHCR_IMAGE}:main"
          fi

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=docker_tags::${DOCKER_TAGS}
          echo ::set-output name=ghcr_image::${GHCR_IMAGE}
          echo ::set-output name=ghcr_tags::${GHCR_TAGS}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=plattforms::${PLATFORMS}
          echo ::set-output name=build_args::VERSION=${VERSION} \
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            build-arg VCS_REF=${GITHUB_SHA::8}
      -
        name: install qemu
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - 
        name: install buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./Dockerfile-buildx
          platforms: ${{ steps.prepare.outputs.platforms }}
          tags: |
            ${{ steps.prepare.outputs.docker_tags }}
            ${{ steps.prepare.outputs.ghcr_tags }}
          build-args: |
            ${{ steps.prepare.outputs.buildx_args }}
      -
        name: Update repo description
        if: github.event_name != 'pull_request'
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ steps.prepare.outputs.DOCKER_IMAGE }}
